name: Test, Build, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Checkout du repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Set up Docker (pas toujours nécessaire mais utile)
      - name: Log in to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      # Étape 3 : Build de l'image Docker
      - name: Build Docker image
        run: |
          docker build -t mydockerapp:${{ github.sha }} ./Streamlit/docker_test

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Checkout du repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Forcer l'installation de Numpy   
      - name: Force install critical dependencies
        run: |
          python -m pip install numpy
          python -m pip install pandas
          python -m pip install lightgbm
          python -m pip install shap
          python -m pip install scikit-learn
          python -m pip install matplotlib
          python -m pip install openpyxl


      # Étape 4 : Exécution des tests
      - name: Run tests
        run: |
          echo "Démarrage des tests unitaires..."
          python Tests/test_model.py

      # Étape 5 : Affichage des logs en cas d'échec
      - name: Display Results (optional)
        if: failure()
        run: |
          echo "Affichage des logs de test (échec détecté) :"
          cat test_results.log

  deploy:
    needs: test
    if: success() # Déploiement uniquement si les tests sont validés
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Login Docker
      - name: Log in to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      # Étape 2 : Push de l'image Docker dans le registre Docker Hub ou Azure
      - name: Push Docker image
        run: |
          docker tag mydockerapp:${{ github.sha }} mydockerhubuser/mydockerapp:${{ github.sha }}
          docker push mydockerhubuser/mydockerapp:${{ github.sha }}

      # Étape 3 : Déploiement sur Azure App Service
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: mydockerhubuser/mydockerapp:${{ github.sha }}
